<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>com.grm.sctele</groupId>
    <artifactId>solarm-web</artifactId>
	<packaging>war</packaging>
	<version>0.0.1-BUILD-SNAPSHOT</version>
	
	<name>sungchang-solar-monitoring</name>
	<url>http://sctele.co.kr/</url>
	<description>성창 주식회사 - SolarMonitoringWeb</description>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<!-- Java -->
		<java-version>1.8</java-version>

		<!-- Test -->
		<junit-version>4.11</junit-version>

		<!-- Lombok -->
		<lombok-version>1.16.6</lombok-version>

		<!-- Log -->
		<slf4j-version>1.7.13</slf4j-version>
		<logback-version>1.1.3</logback-version>

		<!-- Json -->
		<jackson-version>2.6.3</jackson-version>

		<!-- Tiles -->
		<tiles-version>3.0.5</tiles-version>

		<!-- JDBC -->
		<mariadb-client-version>2.0.3</mariadb-client-version>

		<!-- HikariCP -->
		<HikariCP-version>2.4.2</HikariCP-version>
		
		<!-- Spring -->
		<springframework-version>4.2.6.RELEASE</springframework-version>
		<springframework-security-version>4.1.0.RELEASE</springframework-security-version>

		<!-- Spring Social -->
		<springframework-social>1.1.4.RELEASE</springframework-social>
		
		<!-- quartz -->
		<quartz-version>2.2.3</quartz-version>
		
		<!-- Hibernate -->
		<hibernate-version>4.3.11.Final</hibernate-version>
		
		<!-- Mybatis -->
		<mybatis-version>3.4.1</mybatis-version>
		<mybatis-spring-version>1.3.0</mybatis-spring-version>
		
		<!-- HttpClient -->
		<httpclient-version>4.5.2</httpclient-version>
		
		<!-- Netty -->
		<netty-version>4.1.12.Final</netty-version>
		
		<!-- gooroomee -->
		<!-- External msg -->
		<gooroomee-ext-msg-version>0.0.1-SNAPSHOT</gooroomee-ext-msg-version>
		
		<!-- Plugin -->
		<maven-compiler-plugin-version>3.2</maven-compiler-plugin-version>
		<maven-jar-plugin-version>2.5</maven-jar-plugin-version>
		<maven-war-plugin-version>2.2</maven-war-plugin-version>
		<maven-eclipse-plugin-version>2.8</maven-eclipse-plugin-version>
		<maven-assembly-plugin-version>2.5.5</maven-assembly-plugin-version>
		
		<servlet-version>3.1.0</servlet-version>
		<tomcat-version>8.0.35</tomcat-version>
	</properties>

	<dependencies>

		<!-- Test -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit-version}</version>
			<scope>test</scope>
		</dependency>

		<!-- Lombok -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${lombok-version}</version>
			<scope>compile</scope>
		</dependency>

		<!-- https://mvnrepository.com/artifact/javax.inject/javax.inject -->
		<dependency>
		    <groupId>javax.inject</groupId>
		    <artifactId>javax.inject</artifactId>
		    <version>1</version>
		</dependency>

		<!-- Servlet -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>
		<dependency>
		  <groupId>taglibs</groupId>
		  <artifactId>standard</artifactId>
		  <version>1.1.2</version>
		  <scope>compile</scope>
		</dependency>
		<!-- Servlet-provided (컴파일시 사용, 배포시 미사용) -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>${servlet-version}</version>
			<scope>provided</scope>
		</dependency>
		<!-- Servlet-provided (컴파일시 사용, 배포시 미사용) -->
		<dependency>
			<groupId>org.apache.tomcat</groupId>
			<artifactId>tomcat-catalina</artifactId>
			<version>${tomcat-version}</version>
			<scope>provided</scope>
		</dependency>

		<!-- Log -->
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback-version}</version>
			<exclusions>
				<exclusion>
					<artifactId>slf4j-api</artifactId>
					<groupId>org.slf4j</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${slf4j-version}</version>
			<scope>runtime</scope>
			<exclusions>
				<exclusion>
					<artifactId>slf4j-api</artifactId>
					<groupId>org.slf4j</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Json -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>${jackson-version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${jackson-version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>${jackson-version}</version>
		</dependency>

		<!-- Tiles -->
		<dependency>
			<groupId>org.apache.tiles</groupId>
			<artifactId>tiles-extras</artifactId>
			<version>${tiles-version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.apache.tiles</groupId>
					<artifactId>tiles-velocity</artifactId>
				</exclusion>
				<exclusion>
					<groupId>jboss</groupId>
					<artifactId>javassist</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.tiles</groupId>
			<artifactId>tiles-el</artifactId>
			<version>${tiles-version}</version>
		</dependency>

		<!-- JDBC -->
		<dependency>
			<groupId>org.mariadb.jdbc</groupId>
			<artifactId>mariadb-java-client</artifactId>
			<version>${mariadb-client-version}</version>
		</dependency>

		<!-- HikariCP -->
		<dependency>
			<groupId>com.zaxxer</groupId>
			<artifactId>HikariCP</artifactId>
			<version>${HikariCP-version}</version>
		</dependency>

		<!-- Hibernate -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>${hibernate-version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-hikaricp</artifactId>
			<version>${hibernate-version}</version>
		</dependency>
		
		<!-- MyBatis -->
		<dependency>
		    <groupId>org.mybatis</groupId>
		    <artifactId>mybatis</artifactId>
		    <version>${mybatis-version}</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.mybatis/mybatis-spring -->
		<dependency>
		    <groupId>org.mybatis</groupId>
		    <artifactId>mybatis-spring</artifactId>
		    <version>${mybatis-spring-version}</version>
		</dependency>

		<!-- Spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${springframework-version}</version>
			<exclusions> <!-- Exclude Commons Logging in favor of SLF4j -->
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${springframework-version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${springframework-version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${springframework-version}</version>
		</dependency>
		<!--
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aspects</artifactId>
			<version>${springframework-version}</version>
		</dependency>
		-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${springframework-version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${springframework-version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-oxm</artifactId>
			<version>${springframework-version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-websocket</artifactId>
			<version>${springframework-version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${springframework-version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-messaging</artifactId>
			<version>${springframework-version}</version>
		</dependency>

		<!-- Spring Security -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
			<version>${springframework-security-version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
			<version>${springframework-security-version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<version>${springframework-security-version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-taglibs</artifactId>
			<version>${springframework-security-version}</version>
		</dependency>

		<!-- Spring Social  -->
		<dependency>
			<groupId>org.springframework.social</groupId>
			<artifactId>spring-social-core</artifactId>
			<version>${springframework-social}</version>
		</dependency>

		<!-- quartz -->	
		<dependency>
		    <groupId>org.quartz-scheduler</groupId>
		    <artifactId>quartz</artifactId>
		    <version>${quartz-version}</version>
		</dependency>
		<dependency>
		    <groupId>org.quartz-scheduler</groupId>
		    <artifactId>quartz-jobs</artifactId>
		    <version>${quartz-version}</version>
		</dependency>

		<!-- HttpClient -->
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>${httpclient-version}</version>
			<scope>compile</scope>
		</dependency>

		<!-- Fileupload -->
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.3.1</version>
		</dependency>
		
		<!-- Netty관련 -->
		<dependency>
			<groupId>io.netty</groupId>
			<artifactId>netty-all</artifactId>
			<version>${netty-version}</version>
		</dependency>

		<dependency>
			<groupId>commons-configuration</groupId>
			<artifactId>commons-configuration</artifactId>
			<version>1.10</version>
		</dependency>
		
		<dependency>
		    <groupId>net.sf.json-lib</groupId>
		    <artifactId>json-lib</artifactId>
		    <version>2.4</version>
		    <classifier>jdk15</classifier>    
		</dependency>

		<!-- External msg -->
<!-- 		<dependency> -->
<!-- 			<groupId>com.grm</groupId> -->
<!-- 			<artifactId>gooroomee-ext-msg</artifactId> -->
<!-- 			<version>${gooroomee-ext-msg-version}</version> -->
<!-- 		</dependency> -->
	</dependencies>

	<profiles>
		<!-- 배포 환경에 따라 Build시 설정 파일 변경 -->
		<!-- config.properties, database.properties 파일을 배포 환경에 따라 변경 가능
			  Build 방법:
				[goal] -P [profile_id]
			  Ex) clean package -Dmaven.test.skip -P oper -->

		<!-- 개발자 환경 -->
		<profile>
			<id>local</id>
			<activation>
				<activeByDefault>true</activeByDefault>
				<property>
					<name>lombok.delombok.skip</name>
					<value>true</value>
				</property>
			</activation>
			<properties>
				<resource-directory>resources</resource-directory>
				<output-fileName>${project.build.finalName}-Local</output-fileName>
			</properties>
		</profile>
		<!-- 개발 서버 환경 -->
		<profile>
			<id>dev</id>
			<properties>
				<resource-directory>profile/dev</resource-directory>
				<output-fileName>${project.build.finalName}-Dev</output-fileName>
			</properties>
		</profile>
		<!-- QC 서버 환경 -->
		<profile>
			<id>qc</id>
			<properties>
				<resource-directory>profile/qc</resource-directory>
				<output-fileName>${project.build.finalName}-QC</output-fileName>
			</properties>
		</profile>
		<!-- 운영 서버 환경 -->
		<profile>
			<id>release</id>
			<properties>
				<resource-directory>profile/release</resource-directory>
				<output-fileName>${project.build.finalName}-release</output-fileName>
			</properties>
		</profile>
	</profiles>

	<build>
		<finalName>sungchang-solarm-web</finalName>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin-version}</version>
				<configuration>
					<!-- Java Version 설정 -->
					<compilerVersion>${java-version}</compilerVersion>
					<source>${java-version}</source>
					<target>${java-version}</target>
					<!-- encoding 설정 -->
					<encoding>${project.build.sourceEncoding}</encoding>
					<!-- 컴파일러가 코드를 최적화한다. -->
					<optimize>true</optimize>
					<!-- 컴파일된 클래스 파일의 디버깅 정보를 포함 -->
					<debug>true</debug>
					<!-- 사용되지 않는 API를 사용하는 경우 원본 위치를 표시할지 여부를 설정 -->
					<showDeprecation>true</showDeprecation>
					<!-- 컴파일 경고 표시 -->
					<showWarnings>true</showWarnings>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>${maven-jar-plugin-version}</version>
				<executions>
					<execution>
						<goals>
							<goal>jar</goal>
						</goals>
						<phase>prepare-package</phase>
						<!-- class 파일만 포함한다. -->
						<configuration>
							<includes>
								<include>**/*.class</include>
							</includes>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>${maven-war-plugin-version}</version>
				<configuration>
					<!-- War 파일명 설정 -->
					<warName>${project.build.finalName}</warName>
					<webResources>
						<!-- 배포 환경에 따른 Resource를 사용하도록 한다. -->
						<webResource>
							<directory>src/main/${resource-directory}</directory>
							<targetPath>WEB-INF/classes</targetPath>
						</webResource>
						<!-- 
						<webResource>
							<directory>${project.build.directory}/${project.build.finalName}.min</directory>
							<targetPath></targetPath>
						</webResource>
						-->
					</webResources>
				</configuration>
			</plugin>

			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>${maven-assembly-plugin-version}</version>
				<configuration>
					<!-- 배포 파일명 -->
					<finalName>${output-fileName}</finalName>
					<!-- AssemblyId를 파일명에 쓰는것 제거 -->
					<appendAssemblyId>false</appendAssemblyId>
					<attach>false</attach>
					<descriptors>
						<descriptor>src/main/assembly/assembly.xml</descriptor>
					</descriptors>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>${maven-eclipse-plugin-version}</version>
			</plugin>
		</plugins>
	</build>

</project>
