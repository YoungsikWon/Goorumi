<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
	">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:default-servlet-handler/>
	<mvc:annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/resources/**" location="/resources/" />
	
	<!-- <mvc:view-controller path="/" view-name="redirect:/dashboard" /> -->
	
	<bean id="beanFactory" class="com.grm.spring.GrmBeanFactory" />
	
	<!-- JSON -->
	<bean id="jsonFactory" class="com.fasterxml.jackson.core.JsonFactory" />
	<bean id="jsonConverter" factory-bean="beanFactory" factory-method="jsonConverter">
		<constructor-arg ref="jsonFactory" />
	</bean>

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</bean>
	
<!-- 	<context:component-scan base-package="com.grm"> -->
<!-- 		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/> -->
<!-- 	</context:component-scan> -->
	
	<context:component-scan base-package="com.grm.sctele">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
	<!-- Annotaion Transaction(명시적 어노테이션 지정) -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<!-- custom -->
	<bean class="com.grm.spring.GrmServletContextFixBean" />
	
	
	<bean id="contentNegotiatingStrategy" class="org.springframework.web.accept.PathExtensionContentNegotiationStrategy">
		<constructor-arg>
			<map>
				<entry key="html" value="text/html"/>
				<entry key="json" value="application/json"/>
			</map>
		</constructor-arg>
	</bean>
	<bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManager">
		<constructor-arg ref="contentNegotiatingStrategy"/>
	</bean>
	<bean id="jsonView" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
		<property name="objectMapper" ref="jsonConverter" />
	</bean>
	<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="order" value="2" />
		<property name="contentNegotiationManager" ref="contentNegotiationManager"/>
		<property name="defaultViews">
			<list>
				<ref bean="jsonView"/>
			</list>
		</property>
	</bean>

	<!-- Tiles3 Configuration -->
	<bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>classpath:tiles/tiles-layout.xml</value>
			</list>
		</property>
	</bean>
	<bean id="tilesViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="order" value="3" />
		<property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView" />
	</bean>


	<!-- Configure the multipart resolver (Byte) -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    	<property name="maxUploadSize" value="#{config['servlet.multipart.maxUploadSize']}"/>
    </bean>
    
	<bean id="commonInterceptor" class="com.grm.spring.interceptor.CommonInterceptor" />

	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<mvc:exclude-mapping path="/favicon.ico"/>
			<mvc:exclude-mapping path="/resources/**"/>
			<mvc:exclude-mapping path="/common/**"/>
			<mvc:exclude-mapping path="/images/**"/>
			<mvc:exclude-mapping path="/ref/**"/>
			<mvc:exclude-mapping path="/*.html"/>
			<mvc:exclude-mapping path="/*.js"/>
			<mvc:exclude-mapping path="/*.jso"/>

			<ref bean="commonInterceptor"/>
		</mvc:interceptor>
	</mvc:interceptors>

	<!-- Spring Session Event -->	
	<!-- <bean class="com.grm.spring.listener.SpringSessionEventListener" /> -->
</beans>
